{
  "uid" : "3162be1aaa70c2b6",
  "name" : "Нажать кнопку \"Создать аккаунт\"",
  "fullName" : "tests.test_im_reg_auth.TestImAuthReg#test_reg_form_check",
  "historyId" : "82664eb132805c654001f74874064465",
  "time" : {
    "start" : 1738434261687,
    "stop" : 1738434276290,
    "duration" : 14603
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.test_im_reg_auth.TestImAuthReg object at 0x7f234fcaf500>\n\n    @allure.story('1.Регистрация. Переход к форме заполнения данных нового аккаунта')\n    @allure.title('Нажать кнопку \"Создать аккаунт\"')\n    def test_reg_form_check(self): #Нажать кнопку \"Создать аккаунт\"\n>       self.main_page.open_main_page()\n\ntests/test_im_reg_auth.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/mainpage.py:34: in open_main_page\n    button_submit = self.wait_for_clickable_element('//button[text()=\"Применить\"]')\npages/mainpage.py:19: in wait_for_clickable_element\n    return WebDriverWait(self.browser, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"10ee23f558a26e22fff5de6063f6a47d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f234e4663e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "set_allure_labels",
    "time" : {
      "start" : 1738434261686,
      "stop" : 1738434261686,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1738434261686,
      "stop" : 1738434261686,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1738434261301,
      "stop" : 1738434261686,
      "duration" : 385
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.test_im_reg_auth.TestImAuthReg object at 0x7f234fcaf500>\n\n    @allure.story('1.Регистрация. Переход к форме заполнения данных нового аккаунта')\n    @allure.title('Нажать кнопку \"Создать аккаунт\"')\n    def test_reg_form_check(self): #Нажать кнопку \"Создать аккаунт\"\n>       self.main_page.open_main_page()\n\ntests/test_im_reg_auth.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/mainpage.py:34: in open_main_page\n    button_submit = self.wait_for_clickable_element('//button[text()=\"Применить\"]')\npages/mainpage.py:19: in wait_for_clickable_element\n    return WebDriverWait(self.browser, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"10ee23f558a26e22fff5de6063f6a47d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f234e4663e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Открыть сайт",
      "time" : {
        "start" : 1738434261687,
        "stop" : 1738434276289,
        "duration" : 14602
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/workspace/pages/mainpage.py\", line 34, in open_main_page\n    button_submit = self.wait_for_clickable_element('//button[text()=\"Применить\"]')\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/mainpage.py\", line 19, in wait_for_clickable_element\n    return WebDriverWait(self.browser, timeout).until(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1738434276328,
      "stop" : 1738434276414,
      "duration" : 86
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "suite",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "feature",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "story",
    "value" : "1.Регистрация. Переход к форме заполнения данных нового аккаунта"
  }, {
    "name" : "subSuite",
    "value" : "TestImAuthReg"
  }, {
    "name" : "host",
    "value" : "f4af20bfbdea"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_im_reg_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3162be1aaa70c2b6.json",
  "parameterValues" : [ ]
}