{
  "uid" : "778e43df99806b4a",
  "name" : "Ввести в поле ввода номера символы и буквы",
  "fullName" : "tests.test_im_reg_auth.TestImAuthReg#test_reg_form_input_tel_validation",
  "historyId" : "8e1a7ae46d4da3279db79e4eeecd1216",
  "time" : {
    "start" : 1738267194477,
    "stop" : 1738267194482,
    "duration" : 5
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Не удалось перейти на страницу регистрации",
  "statusTrace" : "self = <tests.test_im_reg_auth.TestImAuthReg object at 0x7f7cb1a5b5f0>\nphone = 'АаZz!@#$ _', error = 'Обязательное поле'\n\n    @allure.story('1.Регистрация. Переход к форме заполнения данных нового аккаунта')\n    @allure.title('Ввести в поле ввода номера символы и буквы')\n    @pytest.mark.parametrize(\"phone, error\", [\n            ('АаZz!@#$ _', 'Обязательное поле'),\n            ('987654321', 'Введите оставшиеся цифры')])\n    def test_reg_form_input_tel_validation(self, phone, error):\n>       self.reg_page.open_reg_page()\n\ntests/test_im_reg_auth.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.regpage.RegPage object at 0x7f7cb1ee9520>\n\n    def open_reg_page(self):\n        with allure.step('Открыть страницу регистрации'):\n            page_url = Links.REG_PAGE\n            self.browser.get(page_url)\n>           assert page_url in self.browser.current_url, 'Не удалось перейти на страницу регистрации'\nE           AssertionError: Не удалось перейти на страницу регистрации\n\npages/regpage.py:38: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1738267194164,
      "stop" : 1738267194477,
      "duration" : 313
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "set_allure_labels",
    "time" : {
      "start" : 1738267194477,
      "stop" : 1738267194477,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1738267194477,
      "stop" : 1738267194477,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Не удалось перейти на страницу регистрации",
    "statusTrace" : "self = <tests.test_im_reg_auth.TestImAuthReg object at 0x7f7cb1a5b5f0>\nphone = 'АаZz!@#$ _', error = 'Обязательное поле'\n\n    @allure.story('1.Регистрация. Переход к форме заполнения данных нового аккаунта')\n    @allure.title('Ввести в поле ввода номера символы и буквы')\n    @pytest.mark.parametrize(\"phone, error\", [\n            ('АаZz!@#$ _', 'Обязательное поле'),\n            ('987654321', 'Введите оставшиеся цифры')])\n    def test_reg_form_input_tel_validation(self, phone, error):\n>       self.reg_page.open_reg_page()\n\ntests/test_im_reg_auth.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.regpage.RegPage object at 0x7f7cb1ee9520>\n\n    def open_reg_page(self):\n        with allure.step('Открыть страницу регистрации'):\n            page_url = Links.REG_PAGE\n            self.browser.get(page_url)\n>           assert page_url in self.browser.current_url, 'Не удалось перейти на страницу регистрации'\nE           AssertionError: Не удалось перейти на страницу регистрации\n\npages/regpage.py:38: AssertionError",
    "steps" : [ {
      "name" : "Открыть страницу регистрации",
      "time" : {
        "start" : 1738267194477,
        "stop" : 1738267194481,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Не удалось перейти на страницу регистрации\n",
      "statusTrace" : "  File \"/usr/workspace/pages/regpage.py\", line 38, in open_reg_page\n    assert page_url in self.browser.current_url, 'Не удалось перейти на страницу регистрации'\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1738267194489,
      "stop" : 1738267194544,
      "duration" : 55
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "suite",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "feature",
    "value" : "ИМ - Регистрация/авторизация"
  }, {
    "name" : "story",
    "value" : "1.Регистрация. Переход к форме заполнения данных нового аккаунта"
  }, {
    "name" : "subSuite",
    "value" : "TestImAuthReg"
  }, {
    "name" : "host",
    "value" : "0ad1073d6a14"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_im_reg_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "error",
    "value" : "'Обязательное поле'"
  }, {
    "name" : "phone",
    "value" : "'АаZz!@#$ _'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "778e43df99806b4a.json",
  "parameterValues" : [ "'Обязательное поле'", "'АаZz!@#$ _'" ]
}