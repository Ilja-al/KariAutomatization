name: IM

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: test_autorization
        type: choice
        options:
          - test_autorization

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Copy source code
        uses: actions/checkout@v4
      #- name: Install Docker Compose
      #  run: sudo apt-get update && sudo apt-get install -y docker-compose
      #- name: Checkout (copy) gh-pages repository to GitHub runner
      #  uses: actions/checkout@v3
      #  with:
      #    ref: gh-pages
      #    path: ./.github/gh-pages
      - name: Set up Python env
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest -v
      #- name: Run UI-tests via docker-compose
      #  env:
      #    MONGO_URI: ${{ secrets.MONGO_URI }}
      #    MONGO_USER: ${{ secrets.MONGO_USER }}
      #    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      #  run:  |
      #    docker-compose up --exit-code-from regression || true

      #- name: Copy history from gh-pages to allure-results
      #  run: |
          #sudo mkdir -p allure-results/history  # Создает директорию для истории Allure
          #sudo cp -R ./.github/gh-pages/history/* allure-results/history/

      #- name: Generate Allure report
      #  run: |
      #    sudo docker-compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"

      #- name: Update Allure history
      #  run: |
      #    sudo cp -R allure-report/history/* ./.github/gh-pages/history/

      #- name: Deploy to GitHub Pages
      #  uses: JamesIves/github-pages-deploy-action@4.1.5
      #  with:
      #    token: ${{ secrets.CI_TOKEN }}
      #    branch: gh-pages
      #    folder: allure-report
      #    clean: true