name: IM Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Выберите цель
        required: true
        default: test_authorization
        type: choice
        options:
          - test_authorization

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Установить зависимости
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          pip install -r requirements.txt
      - name: Скачать и установить ChromeDriver
        run: |
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_CHROMEDRIVER_URL" | grep -oP 'chromedriver_linux64 zips' | sed 's/"//g;s/ /_/g;s/ /_/g;s/,//g;s/@//g;s/:/ /g;s/?=/'g;s/">//'g;s/\..$/ig
          curl -sSL "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -o chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          chmod +x chromedriver
          mv -f chromedriver /usr/local/bin/
      - name: Запустить тесты
        env:
          DISPLAY: :99
        run: |
          Xvfb :99 -screen 0 1366x768x24 &
          python -m pytest
      #- name: Install Docker Compose
      #  run: sudo apt-get update && sudo apt-get install -y docker-compose
      #- name: Checkout (copy) gh-pages repository to GitHub runner
      #  uses: actions/checkout@v3
      #  with:
      #    ref: gh-pages
      #    path: ./.github/gh-pages
      #- name: Run UI-tests via docker-compose
      #  env:
      #    MONGO_URI: ${{ secrets.MONGO_URI }}
      #    MONGO_USER: ${{ secrets.MONGO_USER }}
      #    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      #  run:  |
      #    docker-compose up --exit-code-from regression || true
      #- name: Copy history from gh-pages to allure-results
      #  run: |
          #sudo mkdir -p allure-results/history  # Создает директорию для истории Allure
          #sudo cp -R ./.github/gh-pages/history/* allure-results/history/
      #- name: Generate Allure report
      #  run: |
      #    sudo docker-compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"
      #- name: Update Allure history
      #  run: |
      #    sudo cp -R allure-report/history/* ./.github/gh-pages/history/
      #- name: Deploy to GitHub Pages
      #  uses: JamesIves/github-pages-deploy-action@4.1.5
      #  with:
      #    token: ${{ secrets.CI_TOKEN }}
      #    branch: gh-pages
      #    folder: allure-report
      #    clean: true
